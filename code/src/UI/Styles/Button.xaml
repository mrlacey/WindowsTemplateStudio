<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:services="clr-namespace:Microsoft.Templates.UI.Services"
                    xmlns:res="clr-namespace:Microsoft.Templates.UI.Resources">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Microsoft.Templates.UI;component/Styles/_DrawingImage.xaml" />
        <ResourceDictionary Source="/Microsoft.Templates.UI;component/Styles/_Thickness.xaml" />
        <ResourceDictionary Source="/Microsoft.Templates.UI;component/Styles/Image.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="Button" x:Key="WtsBaseButton">
        <Setter Property="Foreground" Value="{Binding ButtonText, Source={x:Static services:UIStylesService.Instance}}" />
        <Setter Property="Background" Value="{Binding Button, Source={x:Static services:UIStylesService.Instance}}" />
        <Setter Property="BorderBrush" Value="{Binding ButtonBorder, Source={x:Static services:UIStylesService.Instance}}" />
        <Setter Property="FontSize" Value="{Binding Environment100PercentFontSize, Source={x:Static services:UIStylesService.Instance}}" />
        <Setter Property="FontFamily" Value="{Binding EnvironmentFontFamily, Source={x:Static services:UIStylesService.Instance}}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate/>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{Binding ButtonHover, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{Binding ButtonHoverText, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{Binding ButtonBorderHover, Source={x:Static services:UIStylesService.Instance}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{Binding ButtonPressed, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{Binding ButtonPressedText, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{Binding ButtonBorderPressed, Source={x:Static services:UIStylesService.Instance}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{Binding ButtonDisabled, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{Binding ButtonDisabledText, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{Binding ButtonBorderDisabled, Source={x:Static services:UIStylesService.Instance}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="Background" Value="{Binding ButtonFocused, Source={x:Static services:UIStylesService.Instance}}" />
                <Setter Property="TextElement.Foreground" Value="{Binding ButtonFocusedText, Source={x:Static services:UIStylesService.Instance}}" />
                <Setter Property="BorderBrush" Value="{Binding ButtonBorderFocused, Source={x:Static services:UIStylesService.Instance}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="WtsButton" BasedOn="{StaticResource WtsBaseButton}">
        <Setter Property="Width" Value="75" />
        <Setter Property="Height" Value="23" />
    </Style>

    <Style TargetType="Button" x:Key="WtsButtonFinish" BasedOn="{StaticResource WtsButton}">
        <Setter Property="BorderBrush" Value="{Binding ButtonPressed, Source={x:Static services:UIStylesService.Instance}}" />
    </Style>

    <Style TargetType="Button" x:Key="WtsButtonIcon">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1" />
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate/>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{Binding ButtonHover, Source={x:Static services:UIStylesService.Instance}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{Binding ButtonFocused, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="BorderBrush" Value="{Binding ButtonBorderFocused, Source={x:Static services:UIStylesService.Instance}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{Binding ButtonPressed, Source={x:Static services:UIStylesService.Instance}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{Binding ButtonDisabledText, Source={x:Static services:UIStylesService.Instance}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="true">
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="WtsButtonCloseNotification">
        <Setter Property="Background" Value="{Binding IBCloseButton, Source={x:Static services:UIStylesService.Instance}}" />
        <Setter Property="BorderBrush" Value="{Binding IBCloseButtonBorder, Source={x:Static services:UIStylesService.Instance}}" />
        <Setter Property="Foreground" Value="{Binding IBCloseButtonGlyph, Source={x:Static services:UIStylesService.Instance}}" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
        <Setter Property="Margin" Value="{StaticResource Margin_M_Right}" />
        <Setter Property="Padding" Value="{StaticResource Margin_S_LeftTopRightBottom}" />
        <Setter Property="Content" Value="&#xE106;" />
        <Setter Property="FontSize" Value="{Binding Environment100PercentFontSize, Source={x:Static services:UIStylesService.Instance}}" />
        <Setter Property="AutomationProperties.Name" Value="{x:Static res:StringRes.ButtonClose}" />
        <Setter Property="ToolTip" Value="{x:Static res:StringRes.ButtonClose}" />

        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Focusable="False"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="{TemplateBinding Padding}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{Binding IBCloseButtonHover, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{Binding IBCloseButtonHover, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="Foreground" Value="{Binding IBCloseButtonHoverGlyph, Source={x:Static services:UIStylesService.Instance}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{Binding IBCloseButtonDown, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{Binding IBCloseButtonDownBorder, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="Foreground" Value="{Binding IBCloseButtonDownGlyph, Source={x:Static services:UIStylesService.Instance}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{Binding IBButtonDisabled, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{Binding IBButtonDisabledBorder, Source={x:Static services:UIStylesService.Instance}}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{Binding IBButtonFocus, Source={x:Static services:UIStylesService.Instance}}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{Binding IBButtonFocusBorder, Source={x:Static services:UIStylesService.Instance}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="WtsButtonDeleteTemplate" BasedOn="{StaticResource WtsButtonIcon}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="{StaticResource Margin_XS_LeftTopRightBottom}" />
        <Setter Property="Foreground" Value="{Binding DeleteTemplateIcon, Source={x:Static services:UIStylesService.Instance}}" />
        <Setter Property="Content" Value="&#xE10A;" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="AutomationProperties.Name" Value="{x:Static res:StringRes.ButtonRemove}" />
        <Setter Property="ToolTip" Value="{x:Static res:StringRes.ButtonRemove}" />
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="Foreground" Value="{Binding ButtonFocusedText, Source={x:Static services:UIStylesService.Instance}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="WtsButtonWindowButtons" BasedOn="{StaticResource WtsBaseButton}">
        <Setter Property="Padding" Value="16,12,16,12" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style TargetType="Button" x:Key="WtsButtonRestoreWindow" BasedOn="{StaticResource WtsButtonWindowButtons}">
        <Setter Property="AutomationProperties.Name" Value="{x:Static res:StringRes.ButtonRestore}" />
        <Setter Property="ToolTip" Value="{x:Static res:StringRes.ButtonRestore}" />
        <Setter Property="Content">
            <Setter.Value>
                <Image Source="{StaticResource WtsIconRestoreWindow}"
                   Style="{StaticResource WtsImageRestoreButtonIcon}" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="WtsButtonMaximizeWindow" BasedOn="{StaticResource WtsButtonWindowButtons}">
        <Setter Property="AutomationProperties.Name" Value="{x:Static res:StringRes.ButtonMaximize}" />
        <Setter Property="ToolTip" Value="{x:Static res:StringRes.ButtonMaximize}" />
        <Setter Property="Content">
            <Setter.Value>
                <Image Source="{StaticResource WtsIconMaximizeWindow}"
                   Style="{StaticResource WtsImageMaximizeButtonIcon}" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="WtsButtonCloseWindow" BasedOn="{StaticResource WtsButtonWindowButtons}">
        <Setter Property="AutomationProperties.Name" Value="{x:Static res:StringRes.ButtonClose}" />
        <Setter Property="ToolTip" Value="{x:Static res:StringRes.ButtonClose}" />
        <Setter Property="Content">
            <Setter.Value>
                <Image Source="{StaticResource WtsIconCloseWindow}"
                   Style="{StaticResource WtsImageCloseButtonIcon}" />
            </Setter.Value>
        </Setter>
    </Style>
    

    <Style TargetType="Button" x:Key="ButtonRefreshTemplatesStyle" BasedOn="{StaticResource WtsBaseButton}">
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Height" Value="23" />
    </Style>
</ResourceDictionary>
